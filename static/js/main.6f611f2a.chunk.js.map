{"version":3,"sources":["components/Headers/logo.svg","components/Headers/ExchangeHeader.jsx","components/AccountBalance/AccountBalance.jsx","components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/Menu/Menu.jsx","App.js","serviceWorker.js","index.js"],"names":["Logo","styled","img","_templateObject","_taggedTemplateLiteral","Header","header","_templateObject2","ExchangeHeader","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","React","createElement","className","src","logo","alt","Component","Section","section","cardStyle","margin","minWidth","display","color","backgroundColor","padding","AccountBalance","props","show","showBalance","buttonText","content","Fragment","amount","account","Card","style","Button","onClick","handleHide","enableEth","StyledTableCell","withStyles","theme","head","palette","common","black","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","Coin","name","align","ticker","price","balance","method","event","preventDefault","handleRefresh","tickerId","useStyles","makeStyles","table","CoinList","classes","TableContainer","component","Paper","Table","TableHead","TableBody","coinData","map","_ref","visible","drawerWidth","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","concat","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","_defineProperty","overflowX","spacing","breakpoints","up","toolbar","_objectSpread","alignItems","justifyContent","mixins","flexGrow","MiniDrawer","_clsx","_clsx2","mIcons","AssistantIcon","MailIcon","InboxIcon","_React$useState","useTheme","useState","_React$useState2","_slicedToArray","open","setOpen","handleDrawerOpen","handleDrawerClose","CssBaseline","Drawer","variant","clsx","paper","IconButton","Avatar","orange","Divider","MenuList","text","index","MenuItem","button","e","alert","toString","handleClick","ListItemIcon","ListItemText","primary","List","ListItem","footer","DivApp","div","insertPrice","data","find","x","id","quotes","Number","parseFloat","toFixed","App","web3","Web3","window","currentProvider","_useState","_useState2","setBalance","_useState3","_useState4","setVisible","_useState5","_useState6","setCoinData","_useState7","_useState8","accounts","setAccounts","_ConnectMetaMask","_asyncToGenerator","_regeneratorRuntime","mark","_callee6","provider","wrap","_context6","prev","next","detectEthereumProvider","sent","startApp","console","log","stop","ethereum","error","enable","then","_callee2","tmpacc","bal","_context2","send","balanceCheck","result","useEffect","length","componentDidMount","on","_callee","_context","t0","t1","t2","t3","call","_x","_ref3","_callee3","acc","_context3","eth","getBalance","err","val","utils","fromWei","abrupt","_x2","_ref4","_callee4","coinResponses","_context4","Promise","all","axios","get","slice","coin","symbol","_ref5","_callee5","nKey","priceOb","newPrice","newCoinData","_context5","values","newValue","_x3","oldValue","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6f611f2a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";","import React, { Component } from 'react'\r\nimport logo from './logo.svg';\r\nimport styled from 'styled-components';\r\n\r\nconst Logo = styled.img`\r\nheight: 9rem;\r\npointer-events: none;\r\n\r\n@media (prefers-reduced-motion: no-preference) {\r\n      animation: App-logo-spin infinite 10s linear;\r\n  }\r\n  @keyframes App-logo-spin {\r\n    from {\r\n      transform: rotate(0deg);\r\n    }\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\nbackground-color: #282c34;\r\nmin-height: 20vh;\r\ndisplay: flex;\r\nflex-direction: row;\r\nalign-items: center;\r\njustify-content: flex-start;\r\nfont-size: 36px;\r\ncolor: white;\r\n`; \r\n\r\n\r\nexport default class ExchangeHeader extends Component {\r\n    render() {\r\n        return (\r\n        <Header className=\"App-header\">\r\n        <Logo src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <h1>\r\n         Coin Exchange \r\n        </h1>\r\n      </Header>\r\n        \r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Card from '@material-ui/core/Card';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst Section = styled.section`\r\n     font-size:2rem;\r\n     text-align: left;\r\n     padding: 1.5rem 0 1.5rem 5rem;\r\n        \r\n`;\r\n/*const Button = styled.button`\r\n    border: none;\r\n    color: #fff;\r\n    padding: 15px 32px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    font-size: 16px;\r\n    box-shadow: 0 2px 4px -1px rgb(0 0 0 / 20%), 0 4px 5px 0 rgb(0 0 0 / 14%), 0 1px 10px 0 rgb(0 0 0 / 12%);\r\n    background-color: #512DA8;\r\n    margin: 3px\r\n    `;\r\n*/\r\nconst cardStyle = {\r\nmargin: '2px 2px',\r\nminWidth: 200,\r\ndisplay:'inline-block',\r\ncolor: '#fff',\r\nbackgroundColor: '#212121',\r\npadding: '4px',\r\n\r\n};\r\n\r\nexport default function AccountBalance(props){\r\n    \r\n    \r\n        let show = props.showBalance;\r\n        const buttonText = show ? 'Hide Balance' : 'Show Balance';\r\n        let content = null;\r\n        if(show){               \r\n                content =<> Balance: ${props.amount}\r\n                            <br/>\r\n                            Account: {props.account} </>\r\n        } else {\r\n            content = <> * </> ;        }\r\n        return (\r\n            <Section>\r\n             <Card style={cardStyle}>\r\n             {content}\r\n             <br/>\r\n             <Button color=\"primary\" onClick={props.handleHide}>{buttonText}</Button> \r\n             <Button color=\"primary\" onClick={props.enableEth}>Connect MetaMask</Button>\r\n             </Card>\r\n            </Section>\r\n        )\r\n    \r\n    \r\n}\r\n\r\nAccountBalance.propTypes = {\r\n    amount: PropTypes.number.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from '@material-ui/core';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nexport default function Coin(props) {\r\n   \r\n  const handleClick = (event) => {\r\n\r\n    event.preventDefault();\r\n\r\n    props.handleRefresh(props.tickerId);\r\n   }\r\n    \r\n        return (\r\n          <StyledTableRow>\r\n              <StyledTableCell >{props.name}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{props.ticker}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{props.price}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{props.balance}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">\r\n                  <form action=\"#\" method=\"POST\">\r\n                  <Button color=\"default\" onClick={handleClick}>Refresh</Button>\r\n                  </form>\r\n                  </StyledTableCell>\r\n          </StyledTableRow>\r\n        );\r\n    \r\n}\r\n\r\nCoin.propTypes = {\r\n    tickerId: PropTypes.string.isRequired,\r\n    name : PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired\r\n}","import React from 'react'\r\nimport Coin from '../Coin/Coin';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nexport default function CoinList(props) {\r\n    \r\n  const classes = useStyles();\r\n\r\n        return (    \r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Name</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Ticker</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Price</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Balance</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Actions</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n        {\r\n        \r\n        props.coinData.map( ({key,name, ticker, price, balance}) => \r\n        <Coin key={key} \r\n              handleRefresh={props.handleRefresh}\r\n              name={name} \r\n              ticker={ticker} \r\n              price={price}\r\n              balance ={props.visible ? balance : \"*\"} \r\n              tickerId = {key}/>\r\n          )\r\n          \r\n        }\r\n        </TableBody>\r\n      </Table>\r\n      \r\n      </TableContainer>\r\n            \r\n        );\r\n}\r\n","import Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AssistantIcon from '@material-ui/icons/Assistant';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer(props) {\r\n\r\n  const mIcons = [<AssistantIcon />, <MailIcon />, <InboxIcon />, <InboxIcon />];\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  let handleDrawer = () => {\r\n    open ? handleDrawerClose() : handleDrawerOpen();\r\n  }\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClick = (text, event) => {\r\n    event.preventDefault();\r\n\r\n    alert(\"hi \" + text.toString());\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawer}>\r\n            {open ? <Avatar className={classes.orange}>N</Avatar> : <Avatar className={classes.orange}>N</Avatar>}\r\n          </IconButton>\r\n        </div>\r\n\r\n        <Divider />\r\n        <MenuList>\r\n          {['Overview', 'History', 'filler', 'Drafts'].map((text, index) => (\r\n            <form action=\"#\" method=\"POST\">\r\n              <MenuItem button key={text} onClick={(e) => handleClick(text, e)} >\r\n                <ListItemIcon>{mIcons[index]}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </MenuItem>\r\n            </form>\r\n          ))}\r\n        </MenuList>\r\n        <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {props.header}\r\n        {props.body}\r\n        {props.footer}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ExchangeHeader from './components/Headers/ExchangeHeader';\r\nimport AccountBalance from './components/AccountBalance/AccountBalance'\r\nimport CoinList from './components/CoinList/CoinList';\r\nimport styled from 'styled-components';\r\nimport Card from '@material-ui/core/Card';\r\nimport axios from 'axios';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Web3 from 'web3';\r\nimport MiniDrawer from './components/Menu/Menu';\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\n\r\n\r\n\r\n\r\nconst DivApp = styled.div`\r\ntext-align: center;\r\nbackground-color: blue;\r\ncolor: #cccccc;\r\n`;\r\n\r\nconst COIN_COUNT = 30;\r\n\r\n// This returns the provider, or null if it wasn't detected.\r\nconst formatPrice = price => Number(parseFloat(Number(price)).toFixed(4));\r\n\r\nfunction insertPrice(data, key){\r\n  \r\n   let val = data.data.find(x => x.id === key);  \r\n   let price = val.quotes['USD'].price;\r\n   \r\n  return Number(parseFloat(Number(price)).toFixed(4));\r\n  \r\n}\r\n\r\nfunction App(props) {\r\n  let web3 = new Web3(window.web3.currentProvider);\r\n  const [balance, setBalance] = useState(0);\r\n  const [visible, setVisible] = useState(true);\r\n  const [coinData, setCoinData] = useState([]);\r\n  const [accounts, setAccounts] = useState([]);\r\n\r\n  useEffect(function(){\r\n    if(coinData.length === 0) {\r\n//mount\r\n\r\ncomponentDidMount();\r\n    }\r\n    \r\n  });\r\n\r\n  window.ethereum.on('accountsChanged',async function (accounts){\r\n    setAccounts(accounts);\r\n    setBalance( await balanceCheck(accounts[0]));\r\n    console.log(await balanceCheck(accounts[0]));\r\nconsole.log(accounts);\r\n  });\r\n\r\n  async function ConnectMetaMask(){\r\n    const provider = await detectEthereumProvider();\r\n    if (provider) {\r\n      // From now on, this should always be true:\r\n      // provider === window.ethereum\r\n      startApp(provider); // initialize your app\r\n    } else {\r\n      console.log('Please install MetaMask!');\r\n    }\r\n   // Legacy DApp Browsers\r\n   if (window.web3) {\r\n       web3 = new Web3(window.web3.currentProvider);\r\n   }\r\n   // Non-DApp Browsers\r\n   else {\r\n       alert('You have to install MetaMask !');\r\n   }\r\n    \r\n  }\r\n\r\n  function startApp(provider) {\r\n    try { \r\n      // If the provider returned by detectEthereumProvider isn't the same as\r\n  // window.ethereum, something is overwriting it – perhaps another wallet.\r\n  if (provider !== window.ethereum) {\r\n    console.error('Do you have multiple wallets installed?');\r\n  }\r\n  // Access the decentralized web!\r\n      window.ethereum.enable().then(async function() {\r\n          // User has allowed account access to DApp...\r\n          // Request account access if needed\r\n      let tmpacc = await provider.send('eth_requestAccounts');\r\n      let bal = await balanceCheck(tmpacc.result[0]);\r\n // Accounts now exposed, use them\r\n// ethereum.send('eth_sendTransaction', { from: accounts[0], /* ... */ })\r\n          \r\n          setAccounts(tmpacc.result);\r\n          console.log(tmpacc.result[0]);\r\n          console.log(bal);\r\n      });\r\n   } catch(e) {\r\n      // User has denied account access to DApp...\r\n   }\r\n  }\r\n\r\n  const balanceCheck = async (acc) => {\r\n    let bal = await web3.eth.getBalance(acc, function(err, result) {\r\n      if (err) {\r\n        console.log(err)\r\n      } else {\r\n        let val = web3.utils.fromWei(result, \"ether\") ;\r\n        setBalance(val);\r\n        console.log(val+ \" ETH\");\r\n         \r\n      }\r\n  });\r\n  return bal;\r\n }\r\n \r\n\r\nconst componentDidMount = async () => {\r\n  \r\n  let coinResponses = await Promise.all([\r\n    axios.get('https://api.coinpaprika.com/v1/coins'),\r\n    axios.get('https://api.coinpaprika.com/v1/tickers')\r\n    \r\n  ]);\r\n let coinData = coinResponses[0].data.slice(0,COIN_COUNT).map(function(coin){\r\n    return {\r\n      key: coin.id,\r\n      name: coin.name,\r\n      ticker: coin.symbol,\r\n      balance: 0,\r\n      price: insertPrice(coinResponses[1],coin.id)   \r\n   };\r\n   \r\n });\r\n \r\n setCoinData(coinData);\r\n \r\n }\r\n   \r\n const handleRefresh = async (nKey) => {\r\n    let priceOb = await axios.get('https://api.coinpaprika.com/v1/tickers/'+nKey);\r\n    let newPrice = Number(parseFloat(Number(priceOb.data.quotes['USD'].price).toFixed(4)));\r\n     const newCoinData = coinData.map(function(values){\r\n        let newValue = {...values};\r\n        console.log(values);\r\n        console.log(newValue);\r\n        if (nKey === values.key) {\r\n          newValue.price = newPrice;\r\n        }\r\n       \r\n        return newValue;\r\n     });\r\n     setCoinData(newCoinData);\r\n    }\r\n\r\n    const handleHide = () => {\r\n      setVisible(oldValue => !oldValue)\r\n     }\r\n  \r\n  return (\r\n  \r\n    <DivApp className=\"App\">\r\n      <MiniDrawer header={<ExchangeHeader/>} \r\n                  body={<AccountBalance amount={balance} account={accounts[0] || \"no account selected\"} showBalance={visible} handleHide={handleHide} enableEth={ConnectMetaMask}/>}\r\n                  footer={<CoinList visible={visible} coinData={coinData} handleRefresh={handleRefresh} />} />\r\n      \r\n      \r\n    </DivApp>\r\n  );\r\n\r\n \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}