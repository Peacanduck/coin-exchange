[{"C:\\Users\\jesse\\Documents\\Code\\coin-exchange\\src\\index.js":"1","C:\\Users\\jesse\\Documents\\Code\\coin-exchange\\src\\App.js":"2","C:\\Users\\jesse\\Documents\\Code\\coin-exchange\\src\\serviceWorker.js":"3","C:\\Users\\jesse\\Documents\\Code\\coin-exchange\\src\\components\\AccountBalance\\AccountBalance.jsx":"4","C:\\Users\\jesse\\Documents\\Code\\coin-exchange\\src\\components\\CoinList\\CoinList.jsx":"5","C:\\Users\\jesse\\Documents\\Code\\coin-exchange\\src\\components\\Coin\\Coin.jsx":"6","C:\\Users\\jesse\\Documents\\Code\\coin-exchange\\src\\components\\Headers\\ExchangeHeader.jsx":"7","C:\\Users\\jesse\\Documents\\Code\\coin-exchange\\src\\components\\Menu\\Menu.jsx":"8"},{"size":520,"mtime":1625825666194,"results":"9","hashOfConfig":"10"},{"size":3660,"mtime":1626365232759,"results":"11","hashOfConfig":"10"},{"size":5086,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":1735,"mtime":1625825907116,"results":"13","hashOfConfig":"10"},{"size":2102,"mtime":1625827080562,"results":"14","hashOfConfig":"10"},{"size":1670,"mtime":1625827199339,"results":"15","hashOfConfig":"10"},{"size":939,"mtime":1625832017919,"results":"16","hashOfConfig":"10"},{"size":5085,"mtime":1626381507499,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"vrnrak",{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jesse\\Documents\\Code\\coin-exchange\\src\\index.js",[],["38","39"],"C:\\Users\\jesse\\Documents\\Code\\coin-exchange\\src\\App.js",["40","41","42","43"],"import React from 'react';\nimport ExchangeHeader from './components/Headers/ExchangeHeader';\nimport AccountBalance from './components/AccountBalance/AccountBalance'\nimport CoinList from './components/CoinList/CoinList';\nimport styled from 'styled-components';\nimport Card from '@material-ui/core/Card';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport Web3 from 'web3';\nimport MiniDrawer from './components/Menu/Menu';\n\n\n\n\nconst DivApp = styled.div`\ntext-align: center;\nbackground-color: blue;\ncolor: #cccccc;\n`;\n\nconst COIN_COUNT = 30;\n\nconst formatPrice = price => Number(parseFloat(Number(price)).toFixed(4));\n\nfunction insertPrice(data, key){\n  \n   let val = data.data.find(x => x.id === key);  \n   let price = val.quotes['USD'].price;\n   \n  return Number(parseFloat(Number(price)).toFixed(4));\n  \n}\n\nfunction App(props) {\n  let web3;\n  const [balance, setBalance] = useState(10000);\n  const [visible, setVisible] = useState(true);\n  const [coinData, setCoinData] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n\n  useEffect(function(){\n    if(coinData.length === 0) {\n//mount\n\ncomponentDidMount();\n    }\n    \n  });\n\n  window.ethereum.on('accountsChanged', function (accounts){\n    setAccounts(accounts);\n    console.log(\"here\");\nconsole.log(accounts);\n  });\n\n  async function ConnectMetaMask(){\n    if (window.ethereum) {\n     web3 = new Web3(window.ethereum);\n      try { \n         window.ethereum.enable().then(async function() {\n             // User has allowed account access to DApp...\n             const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n             \n             setAccounts(accounts);\n             console.log(\"there\");\n             console.log(accounts);\n         });\n      } catch(e) {\n         // User has denied account access to DApp...\n      }\n   }\n   // Legacy DApp Browsers\n   else if (window.web3) {\n       web3 = new Web3(window.web3.currentProvider);\n   }\n   // Non-DApp Browsers\n   else {\n       alert('You have to install MetaMask !');\n   }\n    \n  }\n\nconst componentDidMount = async () => {\n  \n  let coinResponses = await Promise.all([\n    axios.get('https://api.coinpaprika.com/v1/coins'),\n    axios.get('https://api.coinpaprika.com/v1/tickers')\n    \n  ]);\n let coinData = coinResponses[0].data.slice(0,COIN_COUNT).map(function(coin){\n    return {\n      key: coin.id,\n      name: coin.name,\n      ticker: coin.symbol,\n      balance: 0,\n      price: insertPrice(coinResponses[1],coin.id)   \n   };\n   \n });\n \n setCoinData(coinData);\n \n }\n   \n const handleRefresh = async (nKey) => {\n    let priceOb = await axios.get('https://api.coinpaprika.com/v1/tickers/'+nKey);\n    let newPrice = Number(parseFloat(Number(priceOb.data.quotes['USD'].price).toFixed(4)));\n     const newCoinData = coinData.map(function(values){\n        let newValue = {...values};\n        console.log(values);\n        console.log(newValue);\n        if (nKey === values.key) {\n          newValue.price = newPrice;\n        }\n       \n        return newValue;\n     });\n     setCoinData(newCoinData);\n    }\n\n    const handleHide = () => {\n      setVisible(oldValue => !oldValue)\n     }\n  \n  return (\n  \n    <DivApp className=\"App\">\n      <MiniDrawer header={<ExchangeHeader/>} \n                  body={<AccountBalance amount={balance} account={accounts[0] || \"no account selected\"} showBalance={visible} handleHide={handleHide} enableEth={ConnectMetaMask}/>}\n                  footer={<CoinList visible={visible} coinData={coinData} handleRefresh={handleRefresh} />} />\n      \n      \n      \n      \n      \n      \n    </DivApp>\n  );\n\n \n}\n\nexport default App;\n","C:\\Users\\jesse\\Documents\\Code\\coin-exchange\\src\\serviceWorker.js",[],"C:\\Users\\jesse\\Documents\\Code\\coin-exchange\\src\\components\\AccountBalance\\AccountBalance.jsx",[],"C:\\Users\\jesse\\Documents\\Code\\coin-exchange\\src\\components\\CoinList\\CoinList.jsx",["44"],"import React from 'react'\r\nimport Coin from '../Coin/Coin';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nexport default function CoinList(props) {\r\n    \r\n  const classes = useStyles();\r\n\r\n        return (    \r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Name</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Ticker</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Price</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Balance</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Actions</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n        {\r\n        \r\n        props.coinData.map( ({key,name, ticker, price, balance}) => \r\n        <Coin key={key} \r\n              handleRefresh={props.handleRefresh}\r\n              name={name} \r\n              ticker={ticker} \r\n              price={price}\r\n              balance ={props.visible ? balance : \"*\"} \r\n              tickerId = {key}/>\r\n          )\r\n          \r\n        }\r\n        </TableBody>\r\n      </Table>\r\n      \r\n      </TableContainer>\r\n            \r\n        );\r\n}\r\n","C:\\Users\\jesse\\Documents\\Code\\coin-exchange\\src\\components\\Coin\\Coin.jsx",["45"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from '@material-ui/core';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nexport default function Coin(props) {\r\n   \r\n  const handleClick = (event) => {\r\n\r\n    event.preventDefault();\r\n\r\n    props.handleRefresh(props.tickerId);\r\n   }\r\n    \r\n        return (\r\n          <StyledTableRow>\r\n              <StyledTableCell >{props.name}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{props.ticker}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{props.price}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{props.balance}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">\r\n                  <form action=\"#\" method=\"POST\">\r\n                  <Button color=\"default\" onClick={handleClick}>Refresh</Button>\r\n                  </form>\r\n                  </StyledTableCell>\r\n          </StyledTableRow>\r\n        );\r\n    \r\n}\r\n\r\nCoin.propTypes = {\r\n    tickerId: PropTypes.string.isRequired,\r\n    name : PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired\r\n}","C:\\Users\\jesse\\Documents\\Code\\coin-exchange\\src\\components\\Headers\\ExchangeHeader.jsx",[],"C:\\Users\\jesse\\Documents\\Code\\coin-exchange\\src\\components\\Menu\\Menu.jsx",["46","47","48","49","50","51","52"],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":6,"column":8,"nodeType":"59","messageId":"60","endLine":6,"endColumn":12},{"ruleId":"57","severity":1,"message":"61","line":24,"column":7,"nodeType":"59","messageId":"60","endLine":24,"endColumn":18},{"ruleId":"57","severity":1,"message":"62","line":37,"column":19,"nodeType":"59","messageId":"60","endLine":37,"endColumn":29},{"ruleId":"57","severity":1,"message":"63","line":75,"column":8,"nodeType":"59","messageId":"60","endLine":75,"endColumn":12},{"ruleId":"57","severity":1,"message":"64","line":22,"column":7,"nodeType":"59","messageId":"60","endLine":22,"endColumn":21},{"ruleId":"57","severity":1,"message":"65","line":6,"column":22,"nodeType":"59","messageId":"60","endLine":6,"endColumn":32},{"ruleId":"57","severity":1,"message":"66","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":14},{"ruleId":"57","severity":1,"message":"67","line":6,"column":8,"nodeType":"59","messageId":"60","endLine":6,"endColumn":15},{"ruleId":"57","severity":1,"message":"68","line":9,"column":8,"nodeType":"59","messageId":"60","endLine":9,"endColumn":18},{"ruleId":"57","severity":1,"message":"69","line":12,"column":8,"nodeType":"59","messageId":"60","endLine":12,"endColumn":16},{"ruleId":"57","severity":1,"message":"70","line":13,"column":8,"nodeType":"59","messageId":"60","endLine":13,"endColumn":23},{"ruleId":"57","severity":1,"message":"71","line":14,"column":8,"nodeType":"59","messageId":"60","endLine":14,"endColumn":24},{"ruleId":"57","severity":1,"message":"72","line":93,"column":9,"nodeType":"59","messageId":"60","endLine":93,"endColumn":14},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'formatPrice' is assigned a value but never used.","'setBalance' is assigned a value but never used.","'web3' is assigned a value but never used.","'StyledTableRow' is assigned a value but never used.","'makeStyles' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'MenuIcon' is defined but never used.","'ChevronLeftIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.","'theme' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]